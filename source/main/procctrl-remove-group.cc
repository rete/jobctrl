/// \file procctrl-remove-group.cc
/*
 *
 * procctrl-remove-group.cc source template automatically generated by a class generator
 * Creation date : jeu. sept. 29 2016
 *
 * This file is part of procctrl libraries.
 *
 * procctrl is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * procctrl is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with procctrl.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Remi Ete
 * @copyright Remi Ete
 */

// -- procctrl headers
#include "ProcCtrlInternal.h"
#include "DbInterface.h"

// -- tclap headers
#include "tclap/CmdLine.h"
#include "tclap/Arg.h"

// -- std headers
#include <unistd.h>

int main(int argc, char **argv)
{
  std::string cmdLineFooter = "Please report bug to <remi.ete@gmail.com>";
  TCLAP::CmdLine *pCommandLine = new TCLAP::CmdLine(cmdLineFooter, ' ', "0.0.0");

  TCLAP::ValueArg<std::string> dbHostArg(
      "k"
      , "db-host"
      , "The procctrl database host"
      , true
      , ""
      , "string"
  );
  pCommandLine->add(dbHostArg);

  TCLAP::ValueArg<std::string> dbPasswordArg(
      "p"
      , "db-pwd"
      , "The procctrl database password (prompt if not provided)"
      , false
      , ""
      , "string"
  );
  pCommandLine->add(dbPasswordArg);

  TCLAP::ValueArg<std::string> groupArg(
      "g"
      , "group"
      , "The procctrl group name to create"
      , true
      , ""
      , "string"
  );
  pCommandLine->add(groupArg);

  TCLAP::ValueArg<std::string> groupPasswordArg(
      "n"
      , "group-pwd"
      , "The password for new procctrl group (prompt if not provided)"
      , false
      , ""
      , "string"
  );
  pCommandLine->add(groupPasswordArg);

  // parse command line args
  pCommandLine->parse(argc, argv);

  const std::string dbHost(dbHostArg.getValue());
  const std::string group(groupArg.getValue());
  std::string groupPassword = groupPasswordArg.getValue();
  std::string dbPassword = dbPasswordArg.getValue();

  if(dbPassword.empty())
  {
    std::string prompt = "Db password [" + dbHost + "] > ";
    dbPassword = getpass(prompt.c_str());
  }

  if(groupPassword.empty())
  {
    std::string prompt = "Group password [" + group + "] > ";
    groupPassword = getpass(prompt.c_str());
  }

  if(dbPassword.empty() || groupPassword.empty())
  {
    std::cerr << "Invalid (empty) password. Exiting ..." << std::endl;
    return 1;
  }

  // connect to database and insert new group
  procctrl::DbInterface db;
  db.connect(dbHost, dbPassword);
  db.removeGroup(group, groupPassword);

  std::cout << "Successfully removed group '" << group << "' !" << std::endl;

  return 0;
}
